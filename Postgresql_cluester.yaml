---

- name: postgresql installation
  become: yes
  remote_user: root
  hosts: postgremaster
  tasks:
    - name: yum update all package
      yum: name={{ item }} state=present
      with_items:
          - postgresql*

    - name: postgre initdb
      shell: "{{ item }}"
      with_items:
          - sudo service postgresql initdb
          - sudo systemctl restart postgresql.service

    - name: cluster Master configuration
      shell: "{{ item }}"
      with_items:
          - cp /var/lib/pgsql/data/postgresql.conf /var/lib/pgsql/data/postgresql.conf_bak
          - cp /var/lib/pgsql/data/pg_hba.conf /var/lib/pgsql/data/pg_hba.conf_bak
          - chown postgres:postgres /var/lib/pgsql/data/pg_hba.conf_bak
          - chown postgres:postgres /var/lib/pgsql/data/postgresql.conf_bak
          - chown postgres:postgres /var/lib/pgsql/data/pg_hba.conf
          - chown postgres:postgres /var/lib/pgsql/data/postgresql.conf
          - echo "listen_addresses= '192.168.186.97'" >> /var/lib/pgsql/data/postgresql.conf
          - echo "wal_level= hot_standby" >> /var/lib/pgsql/data/postgresql.conf
          - echo "synchronous_commit = local" >> /var/lib/pgsql/data/postgresql.conf
          - echo "archive_mode = on" >> /var/lib/pgsql/data/postgresql.conf
          - echo "archive_command = 'cp %p /var/lib/pgsql/archive/%f'" >> /var/lib/pgsql/data/postgresql.conf
          - echo "max_wal_senders = 2" >> /var/lib/pgsql/data/postgresql.conf
          - echo "synchronous_standby_names = 'pgslave01'" >> /var/lib/pgsql/data/postgresql.conf
          - echo "wal_keep_segments = 10" >> /var/lib/pgsql/data/postgresql.conf
          - sed  -i 's/peer/trust/g' /var/lib/pgsql/data/pg_hba.conf
          - mkdir -p /var/lib/pgsql/archive
          - chown -R postgres:postgres /var/lib/pgsql/archive/
          - echo # Localhost >> /var/lib/pgsql/data/pg_hba.conf
          - echo  "host    replication     replica          127.0.0.1/32        trust" >> /var/lib/pgsql/data/pg_hba.conf
          - echo "# PostgreSQL Master IP address" >> /var/lib/pgsql/data/pg_hba.conf
          - echo " host    replication     replica        192.168.186.97/32     trust" >> /var/lib/pgsql/data/pg_hba.conf
          - echo "# PostgreSQL Slave IP address" >> /var/lib/pgsql/data/pg_hba.conf
          - echo " host    replication     replica       192.168.186.95/32    trust"  >> /var/lib/pgsql/data/pg_hba.conf
          - echo " local all replica trust" >> /var/lib/pgsql/data/pg_hba.conf
          - systemctl restart postgresql.service
          
    - name: create replication user
      community.general.postgresql_query:
        db: postgres
        query: create user replica replication login CONNECTION LIMIT -1 ENCRYPTED PASSWORD 'qwe123'
     
      
- hosts: postgreslave
  remote_user: root
  become: yes
  tasks:
    - name: yum update all package
      yum: name={{ item }} state=present
      with_items:
          - postgresql*

    - name: cluster Slave configuration
      shell: "{{ item }}"
      with_items:
          - systemctl stop postgresql.service
          - cd /var/lib/pgsql/data/
          - mv /var/lib/pgsql/data/ /var/lib/pgsql/data_bck
          - mkdir -p data/
          - chmod 700 data
          - chown -R postgres:postgres data/
          - runuser -l postgres -c 'pg_basebackup -h 192.168.186.97 -U replica -D  /var/lib/pgsql/data/ -P'
          - cd /var/lib/pgsql/data
          - echo  "hot_standby = on" >> /var/lib/pgsql/data/postgresql.conf
          - sed -i 's/192.168.186.97/192.168.186.95/g' /var/lib/pgsql/data/postgresql.conf
          - touch /var/lib/pgsql/data/recovery.conf
          - chown postgres:postgres /var/lib/pgsql/data/recovery.conf
          - echo "standby_mode = 'on'" >> /var/lib/pgsql/data/recovery.conf
          - echo "primary_conninfo = 'host= 192.168.186.97 port=5432 user=replica password=qwe123  application_name=pgslave01'" >> /var/lib/pgsql/data/recovery.conf
          - echo "trigger_file = '/tmp/postgresql.trigger.5432'" >> /var/lib/pgsql/data/recovery.conf
          - chmod 600 /var/lib/pgsql/data/recovery.conf
          - chown postgres:postgres /var/lib/pgsql/data/recovery.conf
          - systemctl start postgresql.service
