- name: Install and configure AD authentication
  hosts: ad_int
  become: yes
  become_user: root

  tasks:
    - name: Install ad_auth required tools
      yum:
        name:
          - libselinux-python
          - realmd
          - sssd
          - oddjob
          - oddjob-mkhomedir
          - adcli
          - samba-common
          - samba-common-tools
          - ntpdate
          - ntp
          - oddjob-mkhomedir
          - oddjob
          - samba-common-tools

    - lineinfile:
        path: /etc/sudoers
        state: present
        regexp: '^%sudo'
        line: " {{ item }}"
      with_items:
        - "{{'%ADMGROUP@xxdomain.net ALL=(ALL) NOPASSWD: ALL'}}"


    - name: create directory if they don't exist
      file:
        path: "{{ path }}"
        state: directory
        owner: root
        group: root
        mode: 0775
      loop:
        - /etc/sssd
      loop_control:
        loop_var: path

    - name: create directory if they don't exist
      file:
        path: "{{ secondpath }}"
        state: directory
        owner: root
        group: root
        mode: 0775
      loop:
        - /etc/sssd/conf.d
      loop_control:
        loop_var: secondpath

    - name: transfer sssd.conf to servers
      ansible.builtin.copy:
        src: /home/xxx/scripts/yaml/AD/domains/XXDOMAIN/sssd.conf
        dest: "{{ sssd_conf }}"
        owner: root
        group: root
        mode: 700
      loop:
        - /etc/sssd/conf.d
        - /etc/sssd/
      loop_control:
        loop_var: sssd_conf

    - name: Install ad_auth required tools
      command: sh /home/user/.sh/sh2.sh

    - name: Wait until the string "Successfully enrolled machine in realm" is in the file /var/log/messages before continuing
      wait_for:
         path: /var/log/messages
         search_regex: Successfully enrolled machine in realm

    - name: Check AD Connection is done
      ansible.builtin.shell: systemctl status sssd | grep "running" | wc -l
      register: service_status

    - name: Check AD Connection
      ansible.builtin.debug:
          msg: "AD integration completed"
      when: service_status.stdout == "1"

    - name: Delete .sh folder & File
      file:
        state: absent
        path: /home/odeonuser/.sh/
     

